{"version":3,"sources":["config.js","Utils/apollo.js","Components/Header/HeaderContainer.js","Components/Header/HeaderWrapper.js","Components/Header/HeaderTitle.js","Components/Header/HeaderSubtitle.js","Components/Header/Header.js","Components/Header/GithubLogin.js","Components/Common/LoaderSvg.js","Components/Common/Loader.js","Components/Blog/BlogContainer.js","Components/Blog/Card/CardContainer.js","Components/Blog/Card/CardHeader.js","Components/Blog/Card/CardCategory.js","Components/Blog/Card/CardTitle.js","Components/Blog/Card/CardDescription.js","Components/Blog/Card/CardReadingTime.js","Components/Blog/Card/Card.js","Utils/tools.js","Containers/Blog.js","Utils/emoji.js","Utils/auth.js","Components/Post/PostContainer.js","Components/Post/PostTitle.js","Components/Post/PostDate.js","Components/Post/PostDateLink.js","Components/Post/PostReaction.js","Components/Post/BackButton.js","Components/Post/Author/AuthorDetails.js","Components/Post/Author/AuthorAvatar.js","Components/Post/Author/AuthorName.js","Components/Markdown/Overrides.js","Components/Post/Comment/Comment.js","Components/Post/Comment/CommentContainer.js","Components/Post/Comment/CommentLink.js","Components/Post/Comment/CommentLinkContainer.js","Containers/CommentsSection.js","Containers/BlogPost.js","Components/Footer/Footer.js","Router.js","Containers/GithubCallback.js","Components/Theme/Sun.js","Components/Theme/Moon.js","Components/Theme/Toggler.js","Components/Theme/GlobalStyles.js","Components/Theme/Theme.js","Application.js","Components/Theme/useDarkMode.js","serviceWorker.js","index.js"],"names":["config","githubConvertedToken","githubUserName","githubRepo","enableOAuth","OAuthClientID","OAuthSecret","title","subtitle","header","backgroundColor","backgroundColorDark","titleColor","titleColorDark","subtitleColor","subtitleColorDark","footer","client","ApolloClient","uri","request","operation","setContext","headers","authorization","atob","userClient","token","HeaderContainer","styled","div","props","theme","mode","HeaderWrapper","HeaderTitle","h1","HeaderSubtitle","Header","isAbsolute","ButtonContainer","absolute","Button","button","Text","span","GithubLogin","isLoggedIn","localStorage","getItem","onClick","a","async","window","location","href","icon","faGithub","LoaderSvg","fill","width","height","viewBox","xmlns","stroke","fill-rule","transform","stroke-width","stroke-opacity","cx","cy","r","d","attributeName","type","from","to","dur","repeatCount","LoaderContainer","Loader","BlogContainer","CardContainer","CardHeader","StyledCategory","body","CardCategory","value","key","id","style","color","name","CardTitle","h2","CardDescription","p","ReadingTime","CardReadingTime","time","Card","blog","useState","labels","setLabels","history","useHistory","useEffect","nodes","filter","map","i","readingTime","minutes","number","text","push","toString","normalize","replace","toLowerCase","trim","openBlog","bodyText","GET_POSTS","gql","Blog","posts","setPosts","useQuery","loading","error","data","console","repository","issues","v","emojis","getEmojiByName","emojiName","getNameByEmoji","emoji","obj","reversed","Object","keys","forEach","reverseMapping","getAuthenticatedUser","fetch","Headers","response","json","result","PostContainer","PostTitle","PostDate","toggleBorder","PostDateLink","PostReaction","BackButton","AuthorDetails","AuthorAvatar","img","AuthorName","HyperLink","children","target","rel","className","jsx","CodeBlock","language","docco","Comment","comment","CommentContainer","src","author","avatarUrl","alt","login","moment","updatedAt","format","options","overrides","component","pre","CommentLink","CommentLinkContainer","CommentsSection","postUrl","comments","BlogHome","issueNumber","parseInt","split","pop","post","setPost","postNodeId","setPostNodeId","reactionPopup","setReactionPopup","postReactions","setPostReactions","postComments","setPostComments","reactionsContainer","useRef","userToken","setReactionFun","useCallback","reactions","reactions_array","element","by","user","content","toggleReaction","length","reactionToAdd","mutate","mutation","node_id","current","forceUpdate","issue","go","back","url","onSelect","ref","counters","onAdd","Footer","bg","setBg","titleTextColor","setTitleTextColor","log","containerStyle","fontSize","createBrowserHistory","require","RouterCom","exact","path","BlogPost","GithubCallback","setLoading","code","method","URLSearchParams","client_id","client_secret","authenticate","search","get","then","setItem","access_token","setUsername","origin","pathname","Sun","strokeWidth","strokeLinecap","strokeLinejoin","Moon","background","Toggle","toggleTheme","GlobalStyles","createGlobalStyle","lightTheme","darkTheme","Application","urlParams","setTheme","setMode","localTheme","useDarkMode","themeToggler","themeMode","Helmet","charSet","Router","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.209ad01e.chunk.js","sourcesContent":["export const config = {\n  // Your Github Converted Token To Know How To Get Your Token Look at Readme.md\n  githubConvertedToken: 'MDU1MmMwYjgyYmJlZDU0ZDc5OTRmMWU5ODRjMjBmMWIyOTYyMGE3Mg==',\n\n  // Your Github UserName\n  githubUserName: 'saadqbal',\n\n  // Your Github Repo Name Where You Have your issues as Blog\n  githubRepo: 'saadqbal.github.io',\n\n  // Set it to true if you have a Github app to add to this project\n  // and fill the client ID & secret\n  enableOAuth: true,\n  OAuthClientID: 'Iv1.839ea0c1e669ac77',\n  OAuthSecret: 'a6a9d2419fbb048819150ce5d8eb61f49cf00f26',\n\n  // Your Personal Blog Title\n  title: 'Asad Iqbal',\n\n  // Your Personal Blog Subtitle\n  subtitle: 'Full Stack Developer',\n\n  // Header customization\n  header: {\n    backgroundColor: '#f1f6f8', // can be a CSS gradient\n    backgroundColorDark: '#4C566A',\n    titleColor: '#ff5252',\n    titleColorDark: '#16a085',\n    subtitleColor: '#37474f',\n    subtitleColorDark: '#D8DEE9'\n  },\n  // Footer customization\n  footer: {\n    backgroundColor: '#f1f6f8', // can be a CSS gradient\n    backgroundColorDark: '#4C566A',\n    titleColor: '#ff5252',\n    titleColorDark: '#16a085',\n    subtitleColor: '#37474f',\n    subtitleColorDark: '#D8DEE9'\n  }\n}\n","import ApolloClient from \"apollo-boost\";\n\nimport { config } from '../config'\n\nexport const client = new ApolloClient({\n  uri: \"https://api.github.com/graphql\",\n  request: operation => {\n    operation.setContext({\n      headers: {\n        authorization: `Bearer ${atob(config.githubConvertedToken)}`\n      }\n    });\n  }\n});\n\nexport const userClient = (token) => new ApolloClient({\n  uri: \"https://api.github.com/graphql\",\n  request: operation => {\n    operation.setContext({\n      headers: {\n        authorization: `Bearer ${token}`\n      }\n    });\n  }\n});","import styled from 'styled-components'\n\nimport { config } from '../../config'\nconst { backgroundColor, backgroundColorDark } = config.header;\n\nexport const HeaderContainer = styled.div`\n  position: relative;\n  padding: 5em;\n  text-align: center;\n  background: ${(props) => props.theme.mode === \"light\" ? backgroundColor : backgroundColorDark};\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-size: cover;\n\n  @media only screen and (max-width: 768px) {\n    padding: 3em;\n  }\n`","import styled from 'styled-components'\n\nexport const HeaderWrapper = styled.div`\n  margin: 0 auto;\n  padding: 0 1em;\n  max-width: 1140px;\n  text-align: center;\n`","import styled from 'styled-components'\n\nimport { config } from '../../config'\nconst { titleColor, titleColorDark } = config.header\n\nexport const HeaderTitle = styled.h1`\n  font-weight: 700;\n  line-height: 1.15;\n  margin: 1.25rem 0;\n  font-size: 4.5em;\n  text-align: center;\n  color: ${(props) => props.theme.mode === \"light\" ? titleColor : titleColorDark};\n\n  @media only screen and (max-width: 768px) {\n    font-size: 3em;\n  }\n`","import styled from 'styled-components'\n\nimport { config } from '../../config'\nconst { subtitleColor, subtitleColorDark } = config.header\n\nexport const HeaderSubtitle = styled.h1`\n  font-weight: 400;\n  color: ${(props) => props.theme.mode === \"light\" ? subtitleColor : subtitleColorDark};\n  line-height: 1.15;\n  margin: 1.25rem 0;\n  font-size: 2.5em;\n  text-align: center;\n\n  @media only screen and (max-width: 768px) {\n    font-size: 2em;\n  }\n`","import React from 'react'\n\nimport {\n    HeaderContainer,\n    HeaderWrapper,\n    HeaderTitle,\n    HeaderSubtitle,\n    GithubLogin\n} from './'\nimport { config } from \"../../config\"\n\nexport const Header = () => {\n    return (\n        <HeaderContainer>\n            <GithubLogin isAbsolute={true} />\n            <HeaderWrapper>\n                <HeaderTitle>{config.title}</HeaderTitle>\n                <HeaderSubtitle>{config.subtitle}</HeaderSubtitle>\n            </HeaderWrapper>\n        </HeaderContainer>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\nimport { config } from '../../config'\n\nconst { enableOAuth, OAuthClientID } = config\n\nconst ButtonContainer = styled.div`\n  display: ${enableOAuth ? 'block' : 'none'};\n  position: ${({ absolute }) => absolute ? 'absolute' : 'initial'};\n  top: 10px;\n  right: 10px;\n`\nconst Button = styled.button`\n  -webkit-appearance: none;\n  background: linear-gradient(180deg, rgb(136, 220, 109) 0%, rgb(92, 168, 65) 100%);\n  color: #FFF;\n  border: none;\n  padding: 8px 16px;\n  font-size: 16px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: 0.2s;\n  outline: 0;\n\n  :hover {\n    box-shadow: 0px 0px 10px 1px rgba(0,0,0,0.10);\n  }\n`\n\nconst Text = styled.span`\n  color: #FFF;\n  font-size: 18px;\n`\n\nexport const GithubLogin = ({ isAbsolute }) => {\n  const isLoggedIn = localStorage.getItem('githubToken') || false\n\n  const callOAuth = async () => {\n    window.location.href = 'https://github.com/login/oauth/authorize?client_id=' + OAuthClientID;\n  }\n\n  return (\n    <ButtonContainer absolute={isAbsolute}>\n      {!isLoggedIn\n       ? (\n          <Button onClick={callOAuth}>\n            <FontAwesomeIcon icon={faGithub} /> Log in\n          </Button>\n         )\n       : <Text>Logged in as {localStorage.getItem('githubUsername')}</Text>\n      }\n    </ButtonContainer>\n  )\n}\n","import React from \"react\";\n\nexport default function LoaderSvg({ fill }) {\n  return (\n    <svg\n      width=\"80\"\n      height=\"80\"\n      viewBox=\"0 0 38 38\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      stroke={fill}\n    >\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <g transform=\"translate(1 1)\" stroke-width=\"2\">\n          <circle stroke-opacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\" />\n          <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n            <animateTransform\n              attributeName=\"transform\"\n              type=\"rotate\"\n              from=\"0 18 18\"\n              to=\"360 18 18\"\n              dur=\"1s\"\n              repeatCount=\"indefinite\"\n            />\n          </path>\n        </g>\n      </g>\n    </svg>\n  );\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport LoaderSvg from './LoaderSvg'\n\nconst LoaderContainer = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n`\n\nexport const Loader = () => (\n  <LoaderContainer>\n    <LoaderSvg fill=\"#2ecc71\" />\n  </LoaderContainer>\n)","import styled from 'styled-components'\n\nexport const BlogContainer = styled.div`\n  margin: 2rem auto 0;\n  width: 90%;\n  max-width: 700px;\n  padding: 20px 10px;\n`","import styled from 'styled-components'\n\nexport const CardContainer = styled.div`\n  cursor: pointer;\n  margin-bottom: 6rem;\n  border-radius: 10px;\n  padding: 10px;\n  transition: 0.2s;\n  position: relative;\n\n  :hover {\n    background-color: ${props => props.theme.mode === 'light' ? '#F5F5F5' : '#3B4252'};\n  }\n`","import styled from 'styled-components'\n\nexport const CardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledCategory = styled.div`\n  display: inline-block;\n  background: #009bbb;\n  border-radius: 3px;\n  padding: 3px 15px;\n  font-size: 12px;\n  text-transform: uppercase;\n  color: ${ props => props.theme.body };\n  font-weight: 300;\n  line-height: 28px;\n  font-family: \"Quicksand\";\n  margin-right: 10px;\n`\n\nexport const CardCategory = ({ value }) => (\n  <StyledCategory\n    key={value.id}\n    style={{ backgroundColor: `#${value.color}` }}>\n    {value.name}\n  </StyledCategory>\n)","import styled from 'styled-components'\n\nexport const CardTitle = styled.h2`\n  font-size: 34px;\n`","import styled from 'styled-components'\n\nexport const CardDescription = styled.p`\n  font-size: 18px;\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n`","import React from 'react'\nimport styled from 'styled-components'\n\nconst ReadingTime = styled.p`\n  color: #b5b5b5;\n  font-size: 15px;\n  position: absolute;\n  top: -10px;\n  right: 10px;\n`\n\nexport const CardReadingTime = ({ time }) => (\n  <ReadingTime>{time} Min Read</ReadingTime>\n)","import React, { useState, useEffect } from \"react\";\nimport readingTime from \"reading-time\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  CardContainer,\n  CardHeader,\n  CardCategory,\n  CardReadingTime,\n  CardTitle,\n  CardDescription,\n} from './'\nimport { slugify } from \"../../../Utils/tools\";\n\nexport const Card = ({ blog }) => {\n  const [labels, setLabels] = useState([]);\n  const history = useHistory();\n\n  const openBlog = (title, number) => {\n    // slugify: convert the title to slug.\n    history.push(`/blog/${slugify(title)}/${number}`);\n  }\n\n  useEffect(() => {\n    const labels = blog.labels.nodes.filter((value) => {\n      return value.name !== \"blog\";\n    });\n\n    setLabels(labels);\n  }, [blog.labels.nodes]);\n\n  return (\n    <CardContainer>\n      <CardHeader>\n        <>\n        {labels.map((value, i) => {\n          return (\n            <CardCategory value={value} key={i} />\n          );\n        })}\n        </>\n        <CardReadingTime time={readingTime(blog.body).minutes} />\n      </CardHeader>\n      <div onClick={() => openBlog(blog.title, blog.number)}>\n        <CardTitle>{blog.title}</CardTitle>\n        <CardDescription>\n          {blog.bodyText}\n        </CardDescription>\n      </div>\n    </CardContainer>\n  );\n}\n","export const reverseMapping = (obj) => {\n  const reversed = {};\n  Object.keys(obj).forEach((key) => {\n      reversed[obj[key]] = key\n  })\n  return reversed\n}\n\nexport const slugify = text =>\n  text\n    .toString()\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .toLowerCase()\n    .trim()\n    .replace(/\\s+/g, '-')\n    .replace(/[^\\w-]+/g, '')\n    .replace(/--+/g, '-')\n","import React, { useState, useEffect } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { config } from \"../config\";\nimport { Header } from \"../Components/Header\";\nimport { Loader } from '../Components/Common'\nimport { BlogContainer } from '../Components/Blog'\nimport { Card } from '../Components/Blog/Card'\n\nconst GET_POSTS = gql`\n{\n  repository(owner: \"${config.githubUserName}\", name: \"${config.githubRepo}\") {\n    issues(first: 100, states: OPEN, filterBy: { labels: \"blog\" }) {\n      nodes {\n        title\n        body\n        bodyHTML\n        bodyText\n        number\n        labels(first: 100) {\n          nodes {\n            color\n            name\n            id\n          }\n        }\n        author {\n          url\n          avatarUrl\n          login\n        }\n        updatedAt\n        id\n      }\n    }\n  }\n}\n`\n\nconst Blog = () => {\n  const [posts, setPosts] = useState([]);\n  const { loading, error, data } = useQuery(GET_POSTS);\n\n  useEffect(() => {\n    if (!loading) {\n      if (error) {\n        console.error(error)\n      }\n\n      if (data) {\n        setPosts(data?.repository?.issues?.nodes)\n      }\n    }\n  }, [loading, error, data]);\n\n  return (\n    <>\n      <Header />\n      <BlogContainer>\n        {\n          loading\n          ? <Loader />\n          : posts.map((v, i) => {\n              return <Card blog={v} key={i} />;\n            })\n        }\n      </BlogContainer>\n    </>\n  );\n}\n\nexport default Blog;\n","import { reverseMapping } from './tools'\n\nconst emojis = {\n  'THUMBS_UP': '👍',\n  'THUMBS_DOWN': '👎',\n  'LAUGH': '😄',\n  'HOORAY': '🎉',\n  'CONFUSED': '😕',\n  'HEART': '❤️',\n  'ROCKET': '🚀',\n  'EYES': '👀',\n}\n\nexport const getEmojiByName = (emojiName) => {\n  return emojis[emojiName] || '';\n};\n\nexport const getNameByEmoji = (emoji) => {\n  return reverseMapping(emojis)[emoji] || '';\n};","export const getToken = () => {\n  return localStorage.getItem('githubToken');\n}\n\nexport const getAuthenticatedUser = async () => {\n  const token = localStorage.getItem('githubToken');\n  if (token) {\n    const response = await fetch('https://api.github.com/user', {\n      headers: new Headers({\n        authorization: `Bearer ${token}`\n      }),\n    });\n    const result = await response.json();\n    result.token = token;\n    return result;\n  }\n}","import styled from 'styled-components'\n\nexport const PostContainer = styled.div`\n  margin: 2rem auto 0;\n  width: 90%;\n  max-width: 700px;\n  padding: 20px 10px;\n  position: relative;\n`","import styled from 'styled-components'\n\nexport const PostTitle = styled.h1`\n  @media only screen and (max-width: 768px) {\n    font-size: 30px;\n  }\n`","import styled from 'styled-components'\n\nexport const PostDate = styled.p`\n  color: ${ props => props.theme.toggleBorder };\n  font-weight: 400;\n  font-size: 14px;\n  margin-bottom: 0px;\n  margin-top: 0px;\n`","import styled from 'styled-components'\n\nexport const PostDateLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  transition-duration: 0.15s, 0.15s, 0.15s;\n  transition-timing-function: ease-in, ease-in, ease-in;\n  transition-delay: 0s, 0s, 0s;\n  color: ${ props => props.theme.toggleBorder };\n  \n  :hover {\n    color: ${ props => props.theme.text };\n  }\n`","import styled from 'styled-components'\n\nexport const PostReaction = styled.span`\n  position: static;\n  bottom: 60px;\n  animation-name: scale-in;\n  animation-duration: 0.15s;\n  animation-timing-function: cubic-bezier(0.2, 0, 0.13, 1.5);\n`\n","import styled from \"styled-components\";\n\nexport const BackButton = styled.button`\n  outline: none;\n  border: 1px solid;\n  font-size: 22px;\n  border-radius: 5px;\n  padding: 0px 20px 0 30px;\n  cursor: pointer;\n  position: relative;\n  background-color: ${ props => props.theme.body };\n  color: ${ props => props.theme.text };\n\n  :hover {\n    background-color: ${ props => props.theme.mode === 'light' ? '#373737' : '#6B8096' };\n    color: white;\n  }\n\n  :before {\n    content: \"\\\\27A4\";\n    position: absolute;\n    transform: translateY(-50%) rotate(180deg);\n    left: 10px;\n    font-size: 16px;\n    top: 54%;\n  }\n`;\n","import styled from 'styled-components'\n\nexport const AuthorDetails = styled.div`\n  display: flex;\n  align-items: center;\n`","import styled from 'styled-components'\n\nexport const AuthorAvatar = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 40px;\n  margin: 10px;\n  margin-left: 0px;\n`","import styled from 'styled-components'\n\nexport const AuthorName = styled.p`\n  margin-bottom: 0px;\n  margin-top: 0px;\n  font-size: 16px;\n  color: ${ props => props.theme.text };\n`","import React from \"react\";\n\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport {docco} from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nexport const HyperLink = ({children, ...props}) => (\n  <a\n    href={props.href}\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n    className=\"blog-post-anchor\"\n  >\n    {children}\n    <style jsx=\"true\">\n      {`\n        a {\n          color: #484848;\n          font-weight: 400;\n        }\n      `}\n    </style>\n  </a>\n);\n\nexport const CodeBlock = ({children}) => (\n  <SyntaxHighlighter language=\"javascript\" style={docco}>\n    {children.props.children}\n  </SyntaxHighlighter>\n);\n","import React from \"react\";\nimport Markdown from \"markdown-to-jsx\";\nimport moment from \"moment\";\n\nimport {PostDate} from \"../\";\nimport {AuthorAvatar, AuthorDetails, AuthorName} from \"../Author\";\nimport {CommentContainer} from \"./\";\n\nimport {HyperLink, CodeBlock} from \"../../Markdown/Overrides\";\n\nexport const Comment = ({comment}) => {\n  return (\n    <CommentContainer>\n      <AuthorDetails>\n        <AuthorAvatar\n          src={comment.author.avatarUrl}\n          alt={comment.author.login}\n        />\n        <div>\n          <AuthorName>{comment.author.login}</AuthorName>\n          <PostDate>{moment(comment.updatedAt).format(\"DD MMM YYYY\")}</PostDate>\n        </div>\n      </AuthorDetails>\n\n      <Markdown\n        options={{\n          overrides: {\n            a: {\n              component: HyperLink,\n            },\n            pre: {\n              component: CodeBlock,\n            },\n          },\n        }}\n      >\n        {comment.body}\n      </Markdown>\n    </CommentContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const CommentContainer = styled.div`\n  margin-top: 3rem;\n  border-radius: 10px;\n  padding: 10px 30px;\n  position: relative;\n  color: ${(props) => props.theme.text};\n  border: ${(props) => props.theme.text} solid 1px;\n  font-size: 16px;\n`;\n","import styled from \"styled-components\";\n\nexport const CommentLink = styled.a`\n  outline: none;\n  border: 1px solid;\n  font-size: 22px;\n  border-radius: 5px;\n  padding: 0px 20px 0 20px;\n  cursor: pointer;\n  position: relative;\n  background-color: ${ props => props.theme.body };\n  color: ${ props => props.theme.text };\n  text-decoration: none;\n  margin: auto;\n\n  :hover {\n    background-color: ${ props => props.theme.mode === 'light' ? '#373737' : '#6B8096' };\n    color: white;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const CommentLinkContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 3rem;\n`;\n","import React from \"react\";\n\nimport {\n  Comment,\n  CommentLink,\n  CommentLinkContainer,\n} from \"../Components/Post/Comment\";\n\nconst CommentsSection = ({postUrl, comments}) => {\n  return (\n    <>\n      <CommentLinkContainer>\n        <CommentLink href={postUrl + \"#issue-comment-box\"} target=\"_blank\">\n          Post a comment\n        </CommentLink>\n      </CommentLinkContainer>\n      {comments.map((v, id) => (\n        <Comment comment={v} key={id} />\n      ))}\n    </>\n  );\n};\n\nexport default CommentsSection;\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport moment from \"moment\";\nimport Markdown from \"markdown-to-jsx\";\nimport readingTime from \"reading-time\";\nimport { GithubSelector, GithubCounter } from \"react-reactions\";\nimport { userClient } from '../Utils/apollo'\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { config } from \"../config\";\nimport { getEmojiByName, getNameByEmoji } from '../Utils/emoji';\nimport { getAuthenticatedUser } from '../Utils/auth'\nimport { Loader } from \"../Components/Common\";\nimport { PostContainer, PostTitle, PostDate, PostDateLink, PostReaction, BackButton } from \"../Components/Post\";\nimport { AuthorDetails, AuthorAvatar, AuthorName } from \"../Components/Post/Author\";\nimport { GithubLogin } from '../Components/Header'\nimport { HyperLink, CodeBlock } from '../Components/Markdown/Overrides';\nimport CommentsSection from \"./CommentsSection\";\n\nexport default function BlogHome() {\n  const issueNumber = parseInt(window.location.href.split(\"/\").pop());\n  const GET_POSTS = gql`{\n    repository(owner: \"${config.githubUserName}\", name: \"${config.githubRepo}\") {\n      issue(number: ${issueNumber}) {\n        title\n        body\n        bodyHTML\n        url\n        bodyText\n        number\n        bodyHTML\n        author {\n          url\n          avatarUrl\n          login\n        }\n        reactions(first:100){\n          nodes{\n            content\n            user{\n              id\n              login\n            }\n          }\n        }\n        updatedAt\n        id\n        comments(first:100) {\n          nodes {\n            author {\n              ... on User {\n                avatarUrl\n                name\n                login\n              }\n            }\n            body\n            bodyHTML\n            bodyText\n            publishedAt\n            updatedAt\n          }\n        }\n      }\n    }\n  }\n  `;\n  const [post, setPost] = useState([]);\n  const [postNodeId, setPostNodeId] = useState('');\n  const [reactionPopup, setReactionPopup] = useState(false);\n  const [postReactions, setPostReactions] = useState([]);\n  const [postComments, setPostComments] = useState([]);\n  const { loading, error, data } = useQuery(GET_POSTS);\n  const reactionsContainer = useRef(null);\n  const userToken = localStorage.getItem('githubToken');\n\n  const setReactionFun = useCallback((reactions) => {\n    // {\n    //   emoji: \"👍\", // String emoji reaction\n    //   by: \"case\" // String of persons name\n    // }\n\n    let reactions_array = [];\n    reactions.forEach(element => {\n      let obj = {\n        by: element.user.login,\n        emoji: getEmojiByName(element.content)\n      };\n      reactions_array.push(obj);\n    });\n\n    setPostReactions(reactions_array);\n  }, []);\n\n  const toggleReaction = async (emoji) => {\n    let reactions = postReactions;\n    const user = await getAuthenticatedUser();\n    const existingReaction = reactions.filter(r => (r.emoji === emoji && r.by === user.login))\n\n    if (existingReaction.length === 0) {\n      const reactionToAdd = {\n        by: user.login,\n        emoji: emoji,\n      }\n\n      // Add the reaction\n      await userClient(userToken).mutate({\n        mutation: gql`\n          mutation AddReaction {\n            addReaction(input:{subjectId:\"${postNodeId}\",content:${getNameByEmoji(emoji)},clientMutationId:\"${user.node_id}\"}) {\n              reaction {\n                id\n              }\n            }\n          }\n        `\n      });\n\n      reactions.push(reactionToAdd);\n    } else {\n      // Remove the reaction\n      await userClient(userToken).mutate({\n        mutation: gql`\n          mutation RemoveReaction {\n            removeReaction(input:{subjectId:\"${postNodeId}\",content:${getNameByEmoji(emoji)},clientMutationId:\"${user.node_id}\"}) {\n              reaction {\n                id\n              }\n            }\n          }\n        `\n      });\n\n      // Remove the reaction from the state\n      reactions = reactions.filter(r => !(r.by === user.login && r.emoji === emoji))\n    }\n\n    setPostReactions(reactions);\n    reactionsContainer.current.forceUpdate(); // refresh the counter\n    setReactionPopup(false); // hiding the reactions choice\n  }\n\n  useEffect(() => {\n    if (!loading) {\n      if (data) {\n        const issues = data.repository.issue;\n        setPostNodeId(issues.id);\n        setPost(issues);\n        setReactionFun(issues.reactions.nodes);\n        setPostComments(issues.comments.nodes);\n      }\n    }\n  }, [loading, error, data, setReactionFun]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  const onBackClick = () => {\n    // ifthe previous page does not exist in the history list. this method to load the previous (or next) URL in the history list.\n    window.history.go();\n    // The back() method loads the previous URL in the history list.\n    window.history.back();\n  };\n\n  return (\n    <>\n      {post.title && (\n        <PostContainer>\n          <BackButton onClick={() => onBackClick()}>Back</BackButton>\n\n          <PostTitle>{post.title}</PostTitle>\n          <div>\n            <AuthorDetails>\n              <AuthorAvatar src={post.author.avatarUrl} alt={post.author.login} />\n              <div>\n                <AuthorName>{post.author.login}</AuthorName>\n                <PostDate>\n                  {moment(post.updatedAt).format(\"DD MMM YYYY\")} .{readingTime(post.body).minutes} Min Read .\n                  <PostDateLink href={post.url} target=\"_black\">\n                    View On Github\n                  </PostDateLink>\n                </PostDate>\n              </div>\n            </AuthorDetails>\n          </div>\n          <Markdown\n            options={{\n              overrides: {\n                a: {\n                  component: HyperLink\n                },\n                pre: {\n                  component: CodeBlock\n                }\n              }\n            }}\n          >\n            {post.body}\n          </Markdown>\n          {reactionPopup && (\n            <PostReaction>\n              {userToken\n                ? <GithubSelector onSelect={emoji => toggleReaction(emoji)} />\n                : <GithubLogin isAbsolute={false} />\n              }\n            </PostReaction>\n          )}\n          <GithubCounter\n            ref={reactionsContainer}\n            counters={postReactions}\n            onSelect={emoji => toggleReaction(emoji)}\n            onAdd={() => setReactionPopup(!reactionPopup)}\n          />\n          <CommentsSection postUrl={post.url} comments={postComments} />\n        </PostContainer>\n      )}\n    </>\n  );\n}\n","import React, { useEffect, useState } from 'react'\nimport { StackOverflowProfile } from 'react-stackoverflow-card'\nimport { config } from '../../config'\nimport 'react-stackoverflow-card/dist/index.css'\n\nconst { backgroundColor, backgroundColorDark, titleColor, titleColorDark } = config.footer\n\nconst Footer = ({ theme }) => {\n  const [bg, setBg] = useState(theme.mode === 'light' ? backgroundColor : null)\n  const [titleTextColor, setTitleTextColor] = useState(theme.mode === 'light' ? titleColor : null)\n  console.log(bg)\n  useEffect(() => {\n    console.log('TEST', theme.mode, bg)\n    setBg(theme.mode === 'light' ? backgroundColor : backgroundColorDark)\n    setTitleTextColor(theme.mode === 'light' ? titleColor : titleColorDark)\n  }, [theme])\n\n  return (\n    <footer className='footer-distributed' style={{ backgroundColor: bg }}>\n      <div className='footer-left'>\n        <h3 style={{ color: titleTextColor }}>Asad <span>Iqbal</span></h3>\n        <p className='footer-links'>\n          <a href='/'>Home</a>\n          <a href='#'>Blog</a>\n          <a href='#'>Pricing</a>\n          <a href='#'>About</a>\n          <a href='#'>Faq</a>\n          <a href='#'>Contact</a>\n        </p>\n        <p className='footer-company-name'>saadqbal &copy; 2019</p>\n      </div>\n\n      <div className='footer-center'>\n\n        <div>\n          <i className='fa fa-map-marker' />\n          <p><span>Hire Me</span></p>\n        </div>\n\n        <div>\n          <i className='fa fa-phone' />\n          <p>+92 334 8442426</p>\n        </div>\n\n        <div>\n          <i className='fa fa-envelope' />\n          <p><a href='mailto:asad.dsoft@gmail.com'>asad.dsoft@gmail.com</a></p>\n        </div>\n        <div>\n          <div className='footer-icons'>\n            <a href='#'><i className='fa fa-facebook' /></a>\n            <a href='#'><i className='fa fa-twitter' /></a>\n            <a href='#'><i className='fa fa-linkedin' /></a>\n            <a href='#'><i className='fa fa-github' /></a>\n          </div>\n        </div>\n      </div>\n\n      <div className='footer-right'>\n\n        <p className='footer-company-about'>\n          <span>My Stackoverfow Profile</span>\n        </p>\n        <StackOverflowProfile id='840186' containerStyle={{ backgroundColor: 'white' }} />\n        <p className='footer-company-about footer-links'>\n                  What to use this baadge for your own Stackoverfow Profile?\n          <span><a style={{ fontSize: 14 }} href='https://www.npmjs.com/package/react-stackoverflow-card'>click here</a></span>\n        </p>\n      </div>\n\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport Blog from './Containers/Blog'\nimport BlogPost from './Containers/BlogPost'\nimport Footer from './Components/Footer/Footer'\nvar createBrowserHistory = require('history').createBrowserHistory\nconst history = createBrowserHistory()\n\nconst RouterCom = ({ theme }) => {\n  console.log(\"THEME=\", theme)\n  \n  return (\n    <Router history={history}>\n      <Switch>\n        <Route exact path='/' component={Blog} />\n        <Route exact path='/blog/:title/:issueNumber' component={BlogPost} />\n      </Switch>\n      <Footer theme={theme} />\n    </Router>\n  )\n}\n\nexport default RouterCom\n","import React, { useEffect, useState } from 'react'\n\nimport { config } from '../config'\nimport { getAuthenticatedUser } from '../Utils/auth'\nimport { Loader } from '../Components/Common/Loader'\n\nconst { enableOAuth, OAuthClientID, OAuthSecret } = config\n\nconst GithubCallback = () => {\n  const [loading, setLoading] = useState(true)\n\n  const authenticate = async (code) => {\n    // Apparently we need to use a proxy to make this request (CORS blocked for client-side only applications)\n    const response = await fetch('https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token', {\n      method: 'POST',\n      body: new URLSearchParams({\n        client_id: OAuthClientID,\n        client_secret: OAuthSecret,\n        code: code,\n      }),\n      headers: new Headers({\n        'Accept': 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }),\n    })\n\n    return response.json()\n  }\n\n  const setUsername = async () => {\n    const { login } = await getAuthenticatedUser()\n    localStorage.setItem('githubUsername', login)\n  }\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    authenticate(urlParams.get('code'))\n    .then((response) => {\n      if (response) {\n        localStorage.setItem('githubToken', response.access_token)\n        setUsername().then(() => setLoading(false))\n      }\n    })\n  }, [])\n\n  if (!enableOAuth || !loading) {\n    return window.location.replace(window.location.origin + window.location.pathname);\n  }\n\n  return <Loader />\n}\n\nexport default GithubCallback\n","import React from \"react\";\n\nexport default function Sun() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <circle cx=\"12\" cy=\"12\" r=\"5\"></circle>\n      <path d=\"M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42\"></path>\n    </svg>\n  );\n}\n","import React from 'react'\n\nexport default function Moon() {\n    return (\n        <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"24\"\n        height=\"24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      >\n        <path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path>\n      </svg>\n    )\n}\n","import React from \"react\";\nimport Sun from \"./Sun\";\nimport Moon from \"./Moon\";\nimport { func, string } from \"prop-types\";\nimport styled from \"styled-components\";\nconst Button = styled.button`\n  background-color: ${({ theme }) => theme.background};\n  border: 2px solid ${({ theme }) => theme.background};\n  color: ${({ theme }) => theme.text};\n  width: 70px;\n  height: 70px;\n  outline: none;\n  border-radius: 50%;\n  transition: all 0.1s ease-in-out;\n  color: white;\n  text-align: center;\n  position: fixed;\n  cursor: pointer;\n  right: 30px;\n  bottom: 30px;\n  box-shadow:\n  0 2.8px 2.2px rgba(0, 0, 0, 0.034),\n  0 6.7px 5.3px rgba(0, 0, 0, 0.048),\n  0 12.5px 10px rgba(0, 0, 0, 0.06),\n  0 22.3px 17.9px rgba(0, 0, 0, 0.072),\n  0 41.8px 33.4px rgba(0, 0, 0, 0.086),\n  0 100px 80px rgba(0, 0, 0, 0.12);\n  }`;\nconst Toggle = ({ theme, toggleTheme }) => {\n  return (\n    <Button onClick={toggleTheme}>\n      {theme === \"light\" ? <Moon /> : <Sun />}\n    </Button>\n  );\n};\nToggle.propTypes = {\n  theme: string.isRequired,\n  toggleTheme: func.isRequired,\n};\nexport default Toggle;\n","import { createGlobalStyle } from \"styled-components\";\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    background: ${({ theme }) => theme.body};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }\n  `;\n","export const lightTheme = {\n  mode: \"light\",\n  body: \"#fff\",\n  text: \"#363537\",\n  toggleBorder: \"#070707\",\n  background: \"#363537\",\n};\nexport const darkTheme = {\n  mode: \"dark\",\n  body: \"#2E3440\",\n  text: \"#FAFAFA\",\n  toggleBorder: \"#6B8096\",\n  background: \"#999\",\n};\n","import React from 'react'\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { Helmet } from \"react-helmet\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport { config } from './config'\nimport { client } from './Utils/apollo';\nimport Router from './Router';\nimport GithubCallback from './Containers/GithubCallback';\nimport Toggle from \"./Components/Theme/Toggler\";\nimport { GlobalStyles } from \"./Components/Theme/GlobalStyles\";\nimport { lightTheme, darkTheme } from \"./Components/Theme/Theme\";\nimport  { useDarkMode } from \"./Components/Theme/useDarkMode\";\n\nconst Application = () => {\n  const urlParams = new URLSearchParams(window.location.search);\n  const [theme, themeToggler] = useDarkMode();\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n  if (urlParams.get('code')) {\n    return <GithubCallback />\n  }\n\n  return (\n    <>\n      <Helmet>\n          <title>{config.title}</title>\n          <meta charSet=\"utf-8\" />\n          <meta name=\"description\" content={config.subtitle} />\n          <meta name=\"theme-color\" content={config.header.backgroundColor} />\n      </Helmet>\n      <ApolloProvider client={client}>\n        <ThemeProvider theme={themeMode} toggleTheme={themeToggler}>\n          <GlobalStyles />\n          <Router theme={themeMode} />\n          <Toggle theme={theme} toggleTheme={themeToggler} />\n        </ThemeProvider>\n      </ApolloProvider>\n    </>\n  )\n};\n\nexport default Application;","import { useEffect, useState } from 'react';\nexport const useDarkMode = () => {\n    const [theme, setTheme] = useState('light');\n\n    const setMode = mode => {\n        window.localStorage.setItem('theme', mode)\n        setTheme(mode)\n    };\n\n    const themeToggler = () => {\n        theme === 'light' ? setMode('dark') : setMode('light')\n    };\n\n    useEffect(() => {\n        const localTheme = window.localStorage.getItem('theme');\n        localTheme && setTheme(localTheme)\n    }, []);\n    return [theme, themeToggler]\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Application from './Application';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<Application />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nif(process.env.NODE_ENV === 'production') serviceWorker.register();\nelse serviceWorker.unregister();\n\n"],"sourceRoot":""}